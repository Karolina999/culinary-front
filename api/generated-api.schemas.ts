/**
 * Generated by orval v6.10.3 üç∫
 * Do not edit manually.
 * culinaryApp
 * OpenAPI spec version: 1.0
 */
export type DeleteApiWatchedRecipeParams = { recipeId?: number; userId?: number };

export type PostApiWatchedRecipeParams = { recipeId?: number; userId?: number };

export type PostApiUserCommentParams = { userId?: number; recipeId?: number };

export type PostApiStepParams = { recipeId?: number };

export type PostApiShoppingListParams = { userId?: number };

export type PostApiRecipeParams = { userId?: number };

export type PostApiProductFromRecipeParams = { recipeId?: number; ingredientId?: number };

export type PostApiProductFromPlannerParams = { ingredientId?: number; plannerId?: number };

export type PostApiProductFromListParams = { ingredientId?: number; shoppingListId?: number };

export type DeleteApiPlannerRecipeParams = { recipeId?: number; plannerId?: number };

export type PostApiPlannerRecipeParams = { recipeId?: number; plannerId?: number };

export type PostApiPlannerParams = { userId?: number };

export interface UserLoginDto {
  login?: string | null;
  password?: string | null;
}

export interface UserDto {
  id?: number;
  firstName?: string | null;
  lastName?: string | null;
  email?: string | null;
  password?: string | null;
  imageUrl?: string | null;
}

export interface UserCommentDto {
  id?: number;
  rating?: number;
  commentText?: string | null;
}

export interface User {
  id?: number;
  firstName?: string | null;
  lastName?: string | null;
  email?: string | null;
  password?: string | null;
  imageUrl?: string | null;
  recipes?: Recipe[] | null;
  watchedRecipes?: WatchedRecipe[] | null;
}

export interface WatchedRecipe {
  recipeId?: number;
  recipe?: Recipe;
  userId?: number;
  user?: User;
}

export interface UserComment {
  id?: number;
  rating?: number;
  commentText?: string | null;
  user?: User;
  recipe?: Recipe;
}

export type Unit = typeof Unit[keyof typeof Unit];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const Unit = {
  '0': 0,
  '1': 1,
  '2': 2,
  '3': 3,
  '4': 4,
  '5': 5,
  '6': 6,
  '7': 7,
  '8': 8,
  '9': 9,
  '10': 10,
  '11': 11,
  '12': 12,
  '13': 13,
  '14': 14,
  '15': 15,
  '16': 16,
  '17': 17,
  '18': 18,
} as const;

export interface StepDto {
  id?: number;
  stepNumber?: number;
  description?: string | null;
  photo?: string | null;
}

export interface ShoppingListDto {
  id?: number;
  title?: string | null;
}

export interface ShoppingList {
  id?: number;
  title?: string | null;
  user?: User;
}

export type RecipeType = typeof RecipeType[keyof typeof RecipeType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const RecipeType = {
  '0': 0,
  '1': 1,
  '2': 2,
} as const;

export interface RecipeDto {
  id?: number;
  title?: string | null;
  level?: Level;
  time?: string | null;
  people?: number;
  photo?: string | null;
  recipeType?: RecipeType;
}

export interface Recipe {
  id?: number;
  title?: string | null;
  level?: Level;
  time?: string | null;
  people?: number;
  photo?: string | null;
  recipeType?: RecipeType;
  owner?: User;
  watchers?: User[] | null;
  watchedRecipes?: WatchedRecipe[] | null;
  planners?: Planner[] | null;
  plannerRecipe?: PlannerRecipe[] | null;
}

export interface Step {
  id?: number;
  stepNumber?: number;
  description?: string | null;
  photo?: string | null;
  recipe?: Recipe;
}

export interface ProductFromRecipeDto {
  id?: number;
  unit?: Unit;
}

export interface ProductFromRecipe {
  id?: number;
  unit?: Unit;
  ingredient?: Ingredient;
  recipe?: Recipe;
}

export interface ProductFromPlannerDto {
  id?: number;
  unit?: Unit;
}

export interface ProductFromPlanner {
  id?: number;
  unit?: Unit;
  ingredient?: Ingredient;
  planner?: Planner;
}

export interface ProductFromListDto {
  id?: number;
  unit?: Unit;
}

export interface ProductFromList {
  id?: number;
  unit?: Unit;
  ingredient?: Ingredient;
  shoppingList?: ShoppingList;
}

export interface ProblemDetails {
  type?: string | null;
  title?: string | null;
  status?: number | null;
  detail?: string | null;
  instance?: string | null;
  [key: string]: unknown;
}

export interface PlannerDto {
  id?: number;
  date?: string;
}

export interface Planner {
  id?: number;
  date?: string;
  user?: User;
  recipes?: Recipe[] | null;
  plannerRecipes?: PlannerRecipe[] | null;
}

export interface PlannerRecipe {
  plannerId?: number;
  planner?: Planner;
  recipeId?: number;
  recipe?: Recipe;
}

export type Level = typeof Level[keyof typeof Level];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const Level = {
  '0': 0,
  '1': 1,
  '2': 2,
} as const;

export type IngredientCategory = typeof IngredientCategory[keyof typeof IngredientCategory];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const IngredientCategory = {
  '0': 0,
  '1': 1,
  '2': 2,
  '3': 3,
  '4': 4,
  '5': 5,
  '6': 6,
  '7': 7,
  '8': 8,
  '9': 9,
  '10': 10,
  '11': 11,
  '12': 12,
  '13': 13,
} as const;

export interface IngredientDto {
  id?: number;
  name?: string | null;
  ingredientCategory?: IngredientCategory;
}

export interface Ingredient {
  id?: number;
  name?: string | null;
  ingredientCategory?: IngredientCategory;
}

